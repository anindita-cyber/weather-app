{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["api","dateBuilder","d","day","getDay","date","getDate","month","getMonth","year","getFullYear","App","useState","query","setQuery","weather","setWeather","className","main","temp","type","placeholder","onChange","e","target","value","onKeyPress","evt","key","fetch","then","res","json","result","console","log","name","sys","country","Date","Math","round","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4NAGMA,G,MACA,oCADAA,EAEC,2CAEDC,EAAY,SAACC,GAEjB,IAGMC,EAFO,CAAC,SAAU,SAAU,UAAW,YAAa,WAAY,SAAU,YAE/DD,EAAEE,UACbC,EAAOH,EAAEI,UACTC,EALO,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,YAKvGL,EAAEM,YACjBC,EAAOP,EAAEQ,cAEb,MAAM,GAAN,OAAUP,EAAV,YAAiBE,EAAjB,YAAyBE,EAAzB,YAAkCE,IA6CvBE,MA1Cf,WAAgB,IAAD,EAEUC,mBAAS,IAFnB,mBAENC,EAFM,KAEAC,EAFA,OAGcF,mBAAS,IAHvB,mBAGNG,EAHM,KAGEC,EAHF,KAiBb,OACE,qBAAKC,UAAmC,oBAAhBF,EAAQG,MAAyBH,EAAQG,KAAKC,KAAO,GAAM,WAAsB,MAAzG,SACA,iCACA,qBAAKF,UAAU,aAAf,SACE,uBAAOG,KAAK,OAAOH,UAAU,aAAaI,YAAY,YAAYC,SAAU,SAAAC,GAAC,OAAET,EAASS,EAAEC,OAAOC,QACjGA,MAAOZ,EACPa,WAlBW,SAAAC,GACG,UAAZA,EAAIC,KACNC,MAAM,GAAD,OAAI7B,EAAJ,qBAAyBa,EAAzB,+BAAqDb,IACvD8B,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJjB,EAAWiB,GACXnB,EAAS,IACToB,QAAQC,IAAIF,WAcS,oBAAhBlB,EAAQG,KACjB,sBAAKD,UAAU,eAAf,UACA,sBAAKA,UAAU,WAAf,UAA2BF,EAAQqB,KAAnC,IAA0CrB,EAAQsB,IAAIC,WACtD,qBAAKrB,UAAU,OAAf,SAAuBhB,EAAY,IAAIsC,QACvC,sBAAKtB,UAAU,cAAf,UACE,sBAAKA,UAAU,OAAf,UAAuBuB,KAAKC,MAAM1B,EAAQG,KAAKC,MAA/C,WACA,qBAAKF,UAAU,UAAf,SAA0BF,EAAQA,QAAQ,GAAGG,aAExC,SC1CEwB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.b3e8b336.chunk.js","sourcesContent":["import React,{useState} from 'react';\nimport './App.css';\n\nconst api={\n  key:\"74224d741e763c9a404cee0c36419283\",\n  base:\"https://api.openweathermap.org/data/2.5/\"\n}\nconst dateBuilder=(d)=>\n{\n  let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n\n    return `${day} ${date} ${month} ${year}`\n}\n\nfunction App() {\n\n  const [query,setQuery]=useState('');\n  const [weather,setWeather]=useState({});\n\n  const search = evt => {\n    if (evt.key === \"Enter\") {\n      fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n        .then(res => res.json())\n        .then(result => {\n          setWeather(result);\n          setQuery('');\n          console.log(result);\n        });\n    }\n  }\n\n  return (\n    <div className={(typeof weather.main != \"undefined\") ? ((weather.main.temp > 16) ? 'app warm' : 'app') : 'app'}>\n    <main>\n    <div className=\"search-box\">\n      <input type=\"text\" className=\"search-bar\" placeholder=\"search...\" onChange={e=>setQuery(e.target.value)}\n      value={query}\n      onKeyPress={search}\n      ></input>\n      </div>\n      {(typeof weather.main != \"undefined\") ? (\n      <div className=\"location-box\">\n      <div className=\"location\">{weather.name},{weather.sys.country}</div>\n      <div className=\"date\">{dateBuilder(new Date())}</div>\n      <div className=\"weather-box\">\n        <div className=\"temp\">{Math.round(weather.main.temp)}Â°c</div>\n        <div className=\"weather\">{weather.weather[0].main}</div>\n      </div>\n    </div>):('')}\n    </main>\n\n    \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}